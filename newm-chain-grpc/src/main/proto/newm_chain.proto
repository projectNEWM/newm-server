syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.newm.chain.grpc";

package newmchain;

service NewmChain {
  rpc SubmitTransaction (SubmitTransactionRequest) returns (SubmitTransactionResponse) {}
  rpc QueryCurrentEpoch (QueryCurrentEpochRequest) returns (QueryCurrentEpochResponse) {}
  rpc QueryUtxos (QueryUtxosRequest) returns (QueryUtxosResponse) {}
  rpc QueryLiveUtxos (QueryUtxosRequest) returns (QueryUtxosResponse) {}
  rpc QueryUtxosByOutputRef (QueryUtxosOutputRefRequest) returns (QueryUtxosResponse) {}
  rpc QueryUtxosByStakeAddress (QueryUtxosRequest) returns (QueryUtxosResponse) {}
  rpc QueryDatumByHash (QueryDatumByHashRequest) returns (QueryDatumByHashResponse) {}
  rpc QueryTransactionConfirmationCount (QueryTransactionConfirmationCountRequest) returns (QueryTransactionConfirmationCountResponse) {}
  rpc MonitorAddress (MonitorAddressRequest) returns (stream MonitorAddressResponse) {}
  rpc IsMainnet (IsMainnetRequest) returns (IsMainnetResponse) {}
  rpc MonitorPaymentAddress (MonitorPaymentAddressRequest) returns (MonitorPaymentAddressResponse) {}
  rpc TransactionBuilder (TransactionBuilderRequest) returns (TransactionBuilderResponse) {}
  rpc MonitorNativeAssets (MonitorNativeAssetsRequest) returns (stream MonitorNativeAssetsResponse) {}
  rpc CalculateMinUtxoForOutput (OutputUtxo) returns (OutputUtxo) {}
  rpc SnapshotNativeAssets (SnapshotNativeAssetsRequest) returns (SnapshotNativeAssetsResponse) {}
  rpc DeriveWalletAddresses (WalletRequest) returns (DeriveWalletAddressesResponse) {}
  rpc QueryWalletControlledLiveUtxos (WalletRequest) returns (QueryWalletControlledUtxosResponse) {}
  rpc QueryPublicKeyHashByOutputRef (QueryUtxosOutputRefRequest) returns (QueryPublicKeyHashResponse) {}
}

message SubmitTransactionRequest {
  bytes cbor = 1;
}

message SubmitTransactionResponse {
  string result = 1;
  string tx_id = 2;
}

message QueryCurrentEpochRequest {}

message QueryCurrentEpochResponse {
  uint64 epoch = 1;
}

message QueryUtxosRequest {
  string address = 1;
}

message QueryUtxosResponse {
  repeated Utxo utxos = 1;
}

message QueryUtxosOutputRefRequest {
  string hash = 1;
  sint64 ix = 2;
}

message QueryDatumByHashRequest {
  string datum_hash = 1;
}

message QueryDatumByHashResponse {
  optional PlutusData datum = 1;
}

message QueryTransactionConfirmationCountRequest {
  repeated string tx_ids = 1;
}

message QueryTransactionConfirmationCountResponse {
  map<string, uint64> tx_id_to_confirmation_count = 1;
}

message Utxo {
  string hash = 1;
  sint64 ix = 2;
  string lovelace = 3;
  optional string datum_hash = 4;
  optional PlutusData datum = 5;
  repeated NativeAsset native_assets = 6;
}

message OutputUtxo {
  string address = 1;
  string lovelace = 2;
  optional string datum_hash = 3;
  optional string datum = 4;
  repeated NativeAsset native_assets = 5;
  optional string script_ref = 6;
}

message NativeAsset {
  string name = 1;
  string policy = 2;
  string amount = 3;
}

message SigningKey {
  bytes skey = 1;
  bytes vkey = 2;
}

message Signature {
  bytes vkey = 1;
  bytes sig = 2;
}

message MonitorAddressRequest {
  string address = 1;
  optional string start_after_tx_id = 2;
}

message MonitorAddressResponse {
  uint64 block = 1;
  uint64 slot = 2;
  string tx_id = 3;
  map<string, PlutusData> datums = 4;
  map<string, Redeemer> redeemers = 5;
  repeated Utxo created_utxos = 6;
  repeated Utxo spent_utxos = 7;
}

message Redeemer {
  RedeemerTag tag = 1;
  uint64 index = 2;
  PlutusData data = 3;
  ExUnits ex_units = 4;
}

enum RedeemerTag {
  SPEND = 0;
  MINT = 1;
  CERT = 2;
  REWARD = 3;
}

message PlutusData {
  optional string cborHex = 1;
  optional uint32 constr = 2;
  oneof plutus_data_wrapper {
    PlutusDataMap map = 3;
    PlutusDataList list = 4;
    uint64 int = 5;
    bytes bytes = 6;
  }
}

message PlutusDataMap {
  repeated PlutusDataMapItem map_item = 1;
}

message PlutusDataMapItem {
  PlutusData map_item_key = 1;
  PlutusData map_item_value = 2;
}

message PlutusDataList {
  repeated PlutusData list_item = 1;
}

message ExUnits {
  uint64 mem = 1;
  uint64 steps = 2;
}

message NativeScript {
  oneof native_script_wrapper {
    NativeScriptPubKey native_script_pub_key = 1;
    NativeScriptAll native_script_all = 2;
    NativeScriptAny native_script_any = 3;
    NativeScriptNofK native_script_n_of_k = 4;
    NativeScriptInvalidBefore native_script_invalid_before = 5;
    NativeScriptInvalidHereafter native_script_invalid_hereafter = 6;
  }
}

message NativeScriptPubKey {
  // type == 0
  bytes addr_key_hash = 1;
}

message NativeScriptAll {
  // type == 1
  repeated NativeScript all = 1;
}

message NativeScriptAny {
  // type == 2
  repeated NativeScript any = 1;
}

message NativeScriptNofK {
  // type == 3
  uint32 n = 1;
  repeated NativeScript k = 2;
}

message NativeScriptInvalidBefore {
  // type == 4
  uint64 absolute_slot = 1;
}

message NativeScriptInvalidHereafter {
  // type == 5
  uint64 absolute_slot = 1;
}

message IsMainnetRequest {}

message IsMainnetResponse {
  bool is_mainnet = 1;
}

message MonitorPaymentAddressRequest {
  string address = 1;
  string lovelace = 3;
  uint64 timeout_ms = 2;
  repeated NativeAsset native_assets = 4;
}

message MonitorPaymentAddressResponse {
  bool success = 1;
  string message = 2;
}

message TransactionBuilderRequest {
  repeated Utxo source_utxos = 1;
  repeated OutputUtxo output_utxos = 2;
  repeated SigningKey signing_keys = 3;
  repeated Signature signatures = 4;
  repeated NativeAsset mint_tokens = 5;
  repeated Utxo reference_inputs = 6;
  repeated NativeScript native_scripts = 7;
  repeated bytes plutus_v1_scripts = 8;
  repeated bytes plutus_v2_scripts = 9;
  repeated NativeScript aux_native_scripts = 10;
  repeated bytes aux_plutus_v1_scripts = 11;
  repeated bytes aux_plutus_v2_scripts = 12;
  repeated Utxo collateral_utxos = 13;
  repeated bytes required_signers = 14;
  repeated Redeemer redeemers = 15;
  repeated PlutusData datums = 16;
  optional string change_address = 17;
  optional uint64 fee = 18;
  optional uint64 ttl_absolute_slot = 19;
  optional bytes aux_data_hash = 20;
  optional uint64 validity_interval_start = 21;
  optional bytes script_data_hash = 22;
  optional NetworkId network_id = 23;
  optional string collateral_return_address = 24;
  optional OutputUtxo collateral_return = 25;
  optional uint64 total_collateral = 26;
  optional bytes transaction_metadata_cbor = 27;
}

message TransactionBuilderResponse {
  string transaction_id = 1;
  bytes transaction_cbor = 2;
}

enum NetworkId {
  TESTNET = 0;
  MAINNET = 1;
}

message MonitorNativeAssetsRequest {
  optional uint64 start_after_id = 1;
}

message MonitorNativeAssetsResponse {
  uint64 id = 1;
  string name = 2;
  string policy = 3;

  oneof monitor_native_assets_response_wrapper {
    string native_asset_supply_change = 4;
    string native_asset_metadata_json = 5;
  }

  uint64 slot = 6;
  uint64 block = 7;
  string tx_hash = 8;
}

message SnapshotNativeAssetsRequest {
  // hex name of the native asset. if %, all native assets under this policy are returned
  // if it starts with ~, performs a regex match on the hex name
  string name = 1;
  // hex policy of the native asset.
  string policy = 2;
}

message SnapshotNativeAssetsResponse {
  repeated SnapshotEntry snapshot_entries = 1;
}

message SnapshotEntry {
  string stake_address = 1;
  uint64 amount = 2;
}

message WalletRequest {
  string account_xpub_key = 1;
}

message DeriveWalletAddressesResponse {
  Address stake_address = 1;
  repeated Address enterprise_address = 2;
  repeated Address enterprise_change_address = 3;
  repeated Address payment_stake_address = 4;
  repeated Address payment_stake_change_address = 5;
}

message Address {
  string address = 1;
  uint32 role = 2;
  uint32 index = 3;
  bool used = 4;
}

message QueryWalletControlledUtxosResponse {
  repeated AddressUtxos address_utxos = 1;
}

message AddressUtxos {
  Address address = 1;
  repeated Utxo utxos = 2;
}

message QueryPublicKeyHashResponse {
  optional string public_key_hash = 1;
}
